.container
  .row
    .mx-auto.col-12
      h2.mx-auto-col-12.text-center.my-5 Rate as of #{@date_last_updated}
  .row
    .col-xs-12
      nav
        #nav-tab.nav.nav-tabs.nav-fill role="tablist"
          a#nav-home-tab.nav-item.nav-link.active aria-controls="nav-home" aria-selected="true" data-toggle="tab" href="#nav-home" role="tab"  Exchange Rates
          a#nav-profile-tab.nav-item.nav-link aria-controls="nav-profile" aria-selected="false" data-toggle="tab" href="#nav-profile" role="tab"  Consumer Alert
      #nav-tabContent.tab-content.py-3.px-3.px-sm-0
        #nav-home.tab-pane.fade.show.active aria-labelledby="nav-home-tab" role="tabpanel"
          .row.card-deck
            - @exchange_rate_json['data'].each do |exchange_rate|
              .col-lg-4.col-md-4.col-12
                .card.mb-4.shadow-sm
                  .mx-auto-col-12.text-center
                    span.flag-icon.flag-icon-my.flag-bnm-wrapper.mt-5
                  .card-body
                    h5.card-title = exchange_rate['currency_code']
                    h6.card-subtitle.mb-2.text-muted = exchange_rate['currency_code']
                    ul
                      li
                        p.card-text
                          span.pr-1
                            b Buy:
                          span = exchange_rate['rate']['buying_rate']
                      li
                        p.card-text
                          span.pr-1
                            b Sell:
                          span = exchange_rate['rate']['selling_rate']
        / todo: to paginate result
        #nav-profile.tab-pane.fade aria-labelledby="nav-profile-tab" role="tabpanel"
          .row.card-deck
            - @consumer_alert_json['data'].each do |consumer_alert|
              .col-lg-4.col-md-4.col-12
                .card.mb-4.shadow-sm
                  .card-body
                    h5.card-title = consumer_alert['name'].truncate(25)
                    h6.card-subtitle.mb-2.text-muted
                      span Registration number: #{consumer_alert['regisration_number'].empty? ? 'N/A' : consumer_alert['regisration_number']}
                    p.card-text
                      span
                        - if consumer_alert['websites'][0].nil?
                          | Website: N/A
                        - else
                          = link_to 'Website', "#{consumer_alert['websites'][0]}", target: '_blank'
                    p.card-text
                      small.pr-1
                        | Entry added:
                      small = consumer_alert['added_date'].nil? ? 'Not available' : consumer_alert['added_date'].to_time.strftime('%b %d, %Y')